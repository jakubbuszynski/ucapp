// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wGQNdEnY25VfiXqc2ZGJrZ
// Component: TieMYXP64Ap
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Slider from "react-slick"; // plasmic-import: HOQUyOpClJ/codeComponent
import Button from "../../Button"; // plasmic-import: eZM_gBMn2w/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project_mobile_first.module.css"; // plasmic-import: wGQNdEnY25VfiXqc2ZGJrZ/projectcss
import sty from "./PlasmicHomepage2.module.css"; // plasmic-import: TieMYXP64Ap/css

import IconWifiIcon from "./icons/PlasmicIcon__IconWifi"; // plasmic-import: yUaWBRXGAT/icon
import IconSettings2Icon from "./icons/PlasmicIcon__IconSettings2"; // plasmic-import: yyLUYFhoyS4/icon
import Group39518Icon from "./icons/PlasmicIcon__Group39518"; // plasmic-import: QPyex1i8q_l/icon
import Rectangle105Icon from "./icons/PlasmicIcon__Rectangle105"; // plasmic-import: AQaATkY-uE/icon
import IconDomIcon from "./icons/PlasmicIcon__IconDom"; // plasmic-import: sOWy2b1yuZ/icon
import Group4Icon from "./icons/PlasmicIcon__Group4"; // plasmic-import: e7xl9pDzGf/icon
import Ellipse49Icon from "./icons/PlasmicIcon__Ellipse49"; // plasmic-import: P0uugp2jEe/icon
import IconPanelGlownyIcon from "./icons/PlasmicIcon__IconPanelGlowny"; // plasmic-import: DKDrvPLykl/icon
import IconArrowIcon from "./icons/PlasmicIcon__IconArrow"; // plasmic-import: -qhDoMlgc3n/icon
import Group7Icon from "./icons/PlasmicIcon__Group7"; // plasmic-import: RfKpJouolhJ/icon
import Ellipse262Icon from "./icons/PlasmicIcon__Ellipse262"; // plasmic-import: LpPtZzW5OtX/icon
import IconHumidityIcon from "./icons/PlasmicIcon__IconHumidity"; // plasmic-import: qOIzQYGwswN/icon
import IconFamilyHouseIcon from "./icons/PlasmicIcon__IconFamilyHouse"; // plasmic-import: fa-x8YpM-j/icon
import IconSoundIcon from "./icons/PlasmicIcon__IconSound"; // plasmic-import: W7LggHx4Zm/icon
import IconVideoIcon from "./icons/PlasmicIcon__IconVideo"; // plasmic-import: Lc1kRyUVa2/icon
import IconMissedCallIcon from "./icons/PlasmicIcon__IconMissedCall"; // plasmic-import: nlVS5Yl-X/icon
import IconComunityIcon from "./icons/PlasmicIcon__IconComunity"; // plasmic-import: bRMD7TZ0qg/icon
import Ellipse36Icon from "./icons/PlasmicIcon__Ellipse36"; // plasmic-import: 2XixHAoBao/icon
import IconMicPlusIcon from "./icons/PlasmicIcon__IconMicPlus"; // plasmic-import: ngJJ-GwnaY/icon
import IconHeartIcon from "./icons/PlasmicIcon__IconHeart"; // plasmic-import: Jz_s8Wvzgq/icon
import GroupIcon from "./icons/PlasmicIcon__Group"; // plasmic-import: zT1yyLrytDX/icon
import Group2Icon from "./icons/PlasmicIcon__Group2"; // plasmic-import: zsir4Dm1UbC/icon
import IconOutIcon from "./icons/PlasmicIcon__IconOut"; // plasmic-import: YJSks7-cKx/icon
import Group3Icon from "./icons/PlasmicIcon__Group3"; // plasmic-import: 4WXBfYFgy/icon

export type PlasmicHomepage2__VariantMembers = {};

export type PlasmicHomepage2__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage2__VariantsArgs;
export const PlasmicHomepage2__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage2__ArgsType = {
  children?: React.ReactNode;
};

type ArgPropType = keyof PlasmicHomepage2__ArgsType;
export const PlasmicHomepage2__ArgProps = new Array<ArgPropType>("children");

export type PlasmicHomepage2__OverridesType = {
  root?: p.Flex<"div">;
  barMainPanel?: p.Flex<"div">;
  frame3868?: p.Flex<"div">;
  group39512?: p.Flex<"div">;
  menu?: p.Flex<"div">;
  dom?: p.Flex<"div">;
  tryby?: p.Flex<"div">;
  iconModes?: p.Flex<"div">;
  glowna?: p.Flex<"div">;
  timeAndDate?: p.Flex<"div">;
  weatherWidgetNoWifi?: p.Flex<"div">;
  rectangle19?: p.Flex<"div">;
  texticon?: p.Flex<"div">;
  iconWeather?: p.Flex<"div">;
  heatControlCircleButton?: p.Flex<"div">;
  aktulanie21?: p.Flex<"div">;
  humidity?: p.Flex<"div">;
  slider?: p.Flex<typeof Slider>;
  notificationsMainPanel3?: p.Flex<"div">;
  rectangle67?: p.Flex<"div">;
  buttonsSmallNotifications2?: p.Flex<"div">;
  frame3869?: p.Flex<"div">;
  rectangle63?: p.Flex<"div">;
  notificationsMainPanel2?: p.Flex<"div">;
  rectangle66?: p.Flex<"div">;
  buttonsSmallNotifications?: p.Flex<"div">;
  frame3870?: p.Flex<"div">;
  rectangle62?: p.Flex<"div">;
  odtworz?: p.Flex<"div">;
  notificationsMainPanel4?: p.Flex<"div">;
  rectangle68?: p.Flex<"div">;
  buttonRecordMessage?: p.Flex<"div">;
  tryby2?: p.Flex<"div">;
  button?: p.Flex<typeof Button>;
  ulubione?: p.Flex<"div">;
  rectangle28?: p.Flex<"div">;
  dzien5?: p.Flex<"div">;
  dzien?: p.Flex<"div">;
  rectangle24?: p.Flex<"div">;
  iconSun?: p.Flex<"div">;
  noc?: p.Flex<"div">;
  rectangle25?: p.Flex<"div">;
  dzien2?: p.Flex<"div">;
  iconNight?: p.Flex<"div">;
  pozaDomem?: p.Flex<"div">;
  rectangle26?: p.Flex<"div">;
  dzien3?: p.Flex<"div">;
  przywolajWinde?: p.Flex<"div">;
  rectangle29?: p.Flex<"div">;
  iconLift?: p.Flex<"div">;
};

export interface DefaultHomepage2Props {
  children?: React.ReactNode;
  className?: string;
}

export const defaultHomepage2__Args: Partial<PlasmicHomepage2__ArgsType> = {};

function PlasmicHomepage2__RenderFunc(props: {
  variants: PlasmicHomepage2__VariantsArgs;
  args: PlasmicHomepage2__ArgsType;
  overrides: PlasmicHomepage2__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomepage2__Args, props.args);
  const $props = args;

  return (
    <React.Fragment>
      {}
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"barMainPanel"}
            data-plasmic-override={overrides.barMainPanel}
            className={classNames(projectcss.all, sty.barMainPanel)}
          >
            <IconWifiIcon
              className={classNames(projectcss.all, sty.svg__hnQvG)}
              role={"img"}
            />

            <IconSettings2Icon
              className={classNames(projectcss.all, sty.svg__rneI)}
              role={"img"}
            />

            <div
              data-plasmic-name={"frame3868"}
              data-plasmic-override={overrides.frame3868}
              className={classNames(projectcss.all, sty.frame3868)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__okLFe
                )}
              >
                {"Logo dewelopera"}
              </div>

              <div
                data-plasmic-name={"group39512"}
                data-plasmic-override={overrides.group39512}
                className={classNames(projectcss.all, sty.group39512)}
              >
                <Group39518Icon
                  className={classNames(projectcss.all, sty.svg__ohp6M)}
                  role={"img"}
                />
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__rPxX)}>
            <div
              data-plasmic-name={"menu"}
              data-plasmic-override={overrides.menu}
              className={classNames(projectcss.all, sty.menu)}
            >
              <Rectangle105Icon
                className={classNames(projectcss.all, sty.svg__s14Cv)}
                role={"img"}
              />

              <p.Stack
                as={"div"}
                data-plasmic-name={"dom"}
                data-plasmic-override={overrides.dom}
                hasGap={true}
                className={classNames(projectcss.all, sty.dom)}
              >
                <IconDomIcon
                  className={classNames(projectcss.all, sty.svg___6R4Nx)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__osYx
                  )}
                >
                  {"Dom"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"tryby"}
                data-plasmic-override={overrides.tryby}
                hasGap={true}
                className={classNames(projectcss.all, sty.tryby)}
              >
                <div
                  data-plasmic-name={"iconModes"}
                  data-plasmic-override={overrides.iconModes}
                  className={classNames(projectcss.all, sty.iconModes)}
                >
                  <Group4Icon
                    className={classNames(projectcss.all, sty.svg__rJeh3)}
                    role={"img"}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p6Z4Z
                  )}
                >
                  {"Tryby"}
                </div>
              </p.Stack>

              <div
                data-plasmic-name={"glowna"}
                data-plasmic-override={overrides.glowna}
                className={classNames(projectcss.all, sty.glowna)}
              >
                {false ? (
                  <Ellipse49Icon
                    className={classNames(projectcss.all, sty.svg__h9Uh4)}
                    role={"img"}
                  />
                ) : null}

                <IconPanelGlownyIcon
                  className={classNames(projectcss.all, sty.svg__m20Tv)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5H9Nu
                  )}
                >
                  {"Główna"}
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__xypAs)}>
            <div
              data-plasmic-name={"timeAndDate"}
              data-plasmic-override={overrides.timeAndDate}
              className={classNames(projectcss.all, sty.timeAndDate)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__k7Htf)}>
                {p.renderPlasmicSlot({
                  defaultContents: (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tl4LR
                      )}
                    >
                      {"12:30"}
                    </div>
                  ),

                  value: args.children
                })}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hkVeb
                )}
              >
                {"Czwartek, 3 luty 2020"}
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__iYoe9)}>
              <div
                data-plasmic-name={"weatherWidgetNoWifi"}
                data-plasmic-override={overrides.weatherWidgetNoWifi}
                className={classNames(projectcss.all, sty.weatherWidgetNoWifi)}
              >
                <div
                  data-plasmic-name={"rectangle19"}
                  data-plasmic-override={overrides.rectangle19}
                  className={classNames(projectcss.all, sty.rectangle19)}
                />

                <div className={classNames(projectcss.all, sty.freeBox__c0XUo)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___060Dn
                    )}
                  >
                    {"Połącz z Wi-Fi, \nby uzyskać dostęp"}
                  </div>

                  <div
                    data-plasmic-name={"texticon"}
                    data-plasmic-override={overrides.texticon}
                    className={classNames(projectcss.all, sty.texticon)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pgSxT
                      )}
                    >
                      {"do pogody"}
                    </div>

                    <IconArrowIcon
                      className={classNames(projectcss.all, sty.svg__s7IoH)}
                      role={"img"}
                    />
                  </div>

                  <div
                    data-plasmic-name={"iconWeather"}
                    data-plasmic-override={overrides.iconWeather}
                    className={classNames(projectcss.all, sty.iconWeather)}
                  >
                    <Group7Icon
                      className={classNames(projectcss.all, sty.svg__mfbnq)}
                      role={"img"}
                    />
                  </div>
                </div>
              </div>

              <div
                data-plasmic-name={"heatControlCircleButton"}
                data-plasmic-override={overrides.heatControlCircleButton}
                className={classNames(
                  projectcss.all,
                  sty.heatControlCircleButton
                )}
              >
                <Ellipse262Icon
                  className={classNames(projectcss.all, sty.svg__dEii)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5Chel
                  )}
                >
                  {"10°"}
                </div>

                <div
                  data-plasmic-name={"aktulanie21"}
                  data-plasmic-override={overrides.aktulanie21}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.aktulanie21
                  )}
                >
                  {"Aktulanie: 21° "}
                </div>

                <div
                  data-plasmic-name={"humidity"}
                  data-plasmic-override={overrides.humidity}
                  className={classNames(projectcss.all, sty.humidity)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jlw1W
                    )}
                  >
                    {"55%"}
                  </div>

                  <IconHumidityIcon
                    className={classNames(projectcss.all, sty.svg__e0LNs)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__ayZ40)}>
              <Slider
                data-plasmic-name={"slider"}
                data-plasmic-override={overrides.slider}
                arrows={false}
                autoplay={true}
                className={classNames("__wab_instance", sty.slider)}
              >
                <div
                  data-plasmic-name={"notificationsMainPanel3"}
                  data-plasmic-override={overrides.notificationsMainPanel3}
                  className={classNames(
                    projectcss.all,
                    sty.notificationsMainPanel3
                  )}
                >
                  <div
                    data-plasmic-name={"rectangle67"}
                    data-plasmic-override={overrides.rectangle67}
                    className={classNames(projectcss.all, sty.rectangle67)}
                  />

                  <IconFamilyHouseIcon
                    className={classNames(projectcss.all, sty.svg__skx7P)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___46RHh
                    )}
                  >
                    {"Notatka #1"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___08Kos
                    )}
                  >
                    {"7 kwietnia | 10:00"}
                  </div>

                  <div
                    data-plasmic-name={"buttonsSmallNotifications2"}
                    data-plasmic-override={overrides.buttonsSmallNotifications2}
                    className={classNames(
                      projectcss.all,
                      sty.buttonsSmallNotifications2
                    )}
                  >
                    <div
                      data-plasmic-name={"frame3869"}
                      data-plasmic-override={overrides.frame3869}
                      className={classNames(projectcss.all, sty.frame3869)}
                    >
                      <div
                        data-plasmic-name={"rectangle63"}
                        data-plasmic-override={overrides.rectangle63}
                        className={classNames(projectcss.all, sty.rectangle63)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__owu6B
                        )}
                      >
                        {"Odsłuchaj"}
                      </div>

                      <IconSoundIcon
                        className={classNames(projectcss.all, sty.svg__k5Vy9)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </div>

                <div
                  data-plasmic-name={"notificationsMainPanel2"}
                  data-plasmic-override={overrides.notificationsMainPanel2}
                  className={classNames(
                    projectcss.all,
                    sty.notificationsMainPanel2
                  )}
                >
                  <div
                    data-plasmic-name={"rectangle66"}
                    data-plasmic-override={overrides.rectangle66}
                    className={classNames(projectcss.all, sty.rectangle66)}
                  />

                  <div
                    data-plasmic-name={"buttonsSmallNotifications"}
                    data-plasmic-override={overrides.buttonsSmallNotifications}
                    className={classNames(
                      projectcss.all,
                      sty.buttonsSmallNotifications
                    )}
                  >
                    <div
                      data-plasmic-name={"frame3870"}
                      data-plasmic-override={overrides.frame3870}
                      className={classNames(projectcss.all, sty.frame3870)}
                    >
                      <div
                        data-plasmic-name={"rectangle62"}
                        data-plasmic-override={overrides.rectangle62}
                        className={classNames(projectcss.all, sty.rectangle62)}
                      />

                      <div
                        data-plasmic-name={"odtworz"}
                        data-plasmic-override={overrides.odtworz}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.odtworz
                        )}
                      >
                        {"Odtwórz "}
                      </div>

                      <IconVideoIcon
                        className={classNames(projectcss.all, sty.svg__sb00O)}
                        role={"img"}
                      />
                    </div>
                  </div>

                  <IconMissedCallIcon
                    className={classNames(projectcss.all, sty.svg__vnhUa)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sWdfC
                    )}
                  >
                    {"Nieodebrane #1"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n0CIc
                    )}
                  >
                    {"7 kwietnia | 10:00"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"notificationsMainPanel4"}
                  data-plasmic-override={overrides.notificationsMainPanel4}
                  className={classNames(
                    projectcss.all,
                    sty.notificationsMainPanel4
                  )}
                >
                  <div
                    data-plasmic-name={"rectangle68"}
                    data-plasmic-override={overrides.rectangle68}
                    className={classNames(projectcss.all, sty.rectangle68)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qVcEq
                    )}
                  >
                    {
                      "Witamy w UNICOMM, Twoim inteligentnym mieszkaniu. Domo..."
                    }
                  </div>

                  <IconComunityIcon
                    className={classNames(projectcss.all, sty.svg__fsB0U)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hZs8F
                    )}
                  >
                    {"Domofon XXI wieku"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zHmd
                    )}
                  >
                    {"7 kwietnia | 10:00"}
                  </div>
                </div>
              </Slider>

              <div className={classNames(projectcss.all, sty.freeBox___0T46O)}>
                <div
                  data-plasmic-name={"buttonRecordMessage"}
                  data-plasmic-override={overrides.buttonRecordMessage}
                  className={classNames(
                    projectcss.all,
                    sty.buttonRecordMessage
                  )}
                >
                  <Ellipse36Icon
                    className={classNames(projectcss.all, sty.svg__udFsv)}
                    role={"img"}
                  />

                  <IconMicPlusIcon
                    className={classNames(projectcss.all, sty.svg__rKYcH)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"tryby2"}
              data-plasmic-override={overrides.tryby2}
              className={classNames(projectcss.all, sty.tryby2)}
            >
              <Button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button)}
              />

              <div
                data-plasmic-name={"ulubione"}
                data-plasmic-override={overrides.ulubione}
                className={classNames(projectcss.all, sty.ulubione)}
              >
                <div
                  data-plasmic-name={"rectangle28"}
                  data-plasmic-override={overrides.rectangle28}
                  className={classNames(projectcss.all, sty.rectangle28)}
                />

                <div
                  data-plasmic-name={"dzien5"}
                  data-plasmic-override={overrides.dzien5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.dzien5
                  )}
                >
                  {"Ulubione"}
                </div>

                <IconHeartIcon
                  className={classNames(projectcss.all, sty.svg__qRvfz)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"dzien"}
                data-plasmic-override={overrides.dzien}
                className={classNames(projectcss.all, sty.dzien)}
              >
                <div
                  data-plasmic-name={"rectangle24"}
                  data-plasmic-override={overrides.rectangle24}
                  className={classNames(projectcss.all, sty.rectangle24)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__huHpd
                  )}
                >
                  {"Dzień"}
                </div>

                <div
                  data-plasmic-name={"iconSun"}
                  data-plasmic-override={overrides.iconSun}
                  className={classNames(projectcss.all, sty.iconSun)}
                >
                  <GroupIcon
                    className={classNames(projectcss.all, sty.svg__knWbT)}
                    role={"img"}
                  />
                </div>
              </div>

              <div
                data-plasmic-name={"noc"}
                data-plasmic-override={overrides.noc}
                className={classNames(projectcss.all, sty.noc)}
              >
                <div
                  data-plasmic-name={"rectangle25"}
                  data-plasmic-override={overrides.rectangle25}
                  className={classNames(projectcss.all, sty.rectangle25)}
                />

                <div
                  data-plasmic-name={"dzien2"}
                  data-plasmic-override={overrides.dzien2}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.dzien2
                  )}
                >
                  {"Noc"}
                </div>

                <div
                  data-plasmic-name={"iconNight"}
                  data-plasmic-override={overrides.iconNight}
                  className={classNames(projectcss.all, sty.iconNight)}
                >
                  <Group2Icon
                    className={classNames(projectcss.all, sty.svg___06YHw)}
                    role={"img"}
                  />
                </div>
              </div>

              <div
                data-plasmic-name={"pozaDomem"}
                data-plasmic-override={overrides.pozaDomem}
                className={classNames(projectcss.all, sty.pozaDomem)}
              >
                <div
                  data-plasmic-name={"rectangle26"}
                  data-plasmic-override={overrides.rectangle26}
                  className={classNames(projectcss.all, sty.rectangle26)}
                />

                <div
                  data-plasmic-name={"dzien3"}
                  data-plasmic-override={overrides.dzien3}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.dzien3
                  )}
                >
                  {"Poza domem"}
                </div>

                <IconOutIcon
                  className={classNames(projectcss.all, sty.svg__jexMi)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"przywolajWinde"}
                data-plasmic-override={overrides.przywolajWinde}
                className={classNames(projectcss.all, sty.przywolajWinde)}
              >
                <div
                  data-plasmic-name={"rectangle29"}
                  data-plasmic-override={overrides.rectangle29}
                  className={classNames(projectcss.all, sty.rectangle29)}
                />

                <div
                  data-plasmic-name={"iconLift"}
                  data-plasmic-override={overrides.iconLift}
                  className={classNames(projectcss.all, sty.iconLift)}
                >
                  <Group3Icon
                    className={classNames(projectcss.all, sty.svg__tnHpG)}
                    role={"img"}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__e7YkZ
                  )}
                >
                  {"Przywołaj\nwindę"}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "barMainPanel",
    "frame3868",
    "group39512",
    "menu",
    "dom",
    "tryby",
    "iconModes",
    "glowna",
    "timeAndDate",
    "weatherWidgetNoWifi",
    "rectangle19",
    "texticon",
    "iconWeather",
    "heatControlCircleButton",
    "aktulanie21",
    "humidity",
    "slider",
    "notificationsMainPanel3",
    "rectangle67",
    "buttonsSmallNotifications2",
    "frame3869",
    "rectangle63",
    "notificationsMainPanel2",
    "rectangle66",
    "buttonsSmallNotifications",
    "frame3870",
    "rectangle62",
    "odtworz",
    "notificationsMainPanel4",
    "rectangle68",
    "buttonRecordMessage",
    "tryby2",
    "button",
    "ulubione",
    "rectangle28",
    "dzien5",
    "dzien",
    "rectangle24",
    "iconSun",
    "noc",
    "rectangle25",
    "dzien2",
    "iconNight",
    "pozaDomem",
    "rectangle26",
    "dzien3",
    "przywolajWinde",
    "rectangle29",
    "iconLift"
  ],
  barMainPanel: ["barMainPanel", "frame3868", "group39512"],
  frame3868: ["frame3868", "group39512"],
  group39512: ["group39512"],
  menu: ["menu", "dom", "tryby", "iconModes", "glowna"],
  dom: ["dom"],
  tryby: ["tryby", "iconModes"],
  iconModes: ["iconModes"],
  glowna: ["glowna"],
  timeAndDate: ["timeAndDate"],
  weatherWidgetNoWifi: [
    "weatherWidgetNoWifi",
    "rectangle19",
    "texticon",
    "iconWeather"
  ],
  rectangle19: ["rectangle19"],
  texticon: ["texticon"],
  iconWeather: ["iconWeather"],
  heatControlCircleButton: [
    "heatControlCircleButton",
    "aktulanie21",
    "humidity"
  ],
  aktulanie21: ["aktulanie21"],
  humidity: ["humidity"],
  slider: [
    "slider",
    "notificationsMainPanel3",
    "rectangle67",
    "buttonsSmallNotifications2",
    "frame3869",
    "rectangle63",
    "notificationsMainPanel2",
    "rectangle66",
    "buttonsSmallNotifications",
    "frame3870",
    "rectangle62",
    "odtworz",
    "notificationsMainPanel4",
    "rectangle68"
  ],
  notificationsMainPanel3: [
    "notificationsMainPanel3",
    "rectangle67",
    "buttonsSmallNotifications2",
    "frame3869",
    "rectangle63"
  ],
  rectangle67: ["rectangle67"],
  buttonsSmallNotifications2: [
    "buttonsSmallNotifications2",
    "frame3869",
    "rectangle63"
  ],
  frame3869: ["frame3869", "rectangle63"],
  rectangle63: ["rectangle63"],
  notificationsMainPanel2: [
    "notificationsMainPanel2",
    "rectangle66",
    "buttonsSmallNotifications",
    "frame3870",
    "rectangle62",
    "odtworz"
  ],
  rectangle66: ["rectangle66"],
  buttonsSmallNotifications: [
    "buttonsSmallNotifications",
    "frame3870",
    "rectangle62",
    "odtworz"
  ],
  frame3870: ["frame3870", "rectangle62", "odtworz"],
  rectangle62: ["rectangle62"],
  odtworz: ["odtworz"],
  notificationsMainPanel4: ["notificationsMainPanel4", "rectangle68"],
  rectangle68: ["rectangle68"],
  buttonRecordMessage: ["buttonRecordMessage"],
  tryby2: [
    "tryby2",
    "button",
    "ulubione",
    "rectangle28",
    "dzien5",
    "dzien",
    "rectangle24",
    "iconSun",
    "noc",
    "rectangle25",
    "dzien2",
    "iconNight",
    "pozaDomem",
    "rectangle26",
    "dzien3",
    "przywolajWinde",
    "rectangle29",
    "iconLift"
  ],
  button: ["button"],
  ulubione: ["ulubione", "rectangle28", "dzien5"],
  rectangle28: ["rectangle28"],
  dzien5: ["dzien5"],
  dzien: ["dzien", "rectangle24", "iconSun"],
  rectangle24: ["rectangle24"],
  iconSun: ["iconSun"],
  noc: ["noc", "rectangle25", "dzien2", "iconNight"],
  rectangle25: ["rectangle25"],
  dzien2: ["dzien2"],
  iconNight: ["iconNight"],
  pozaDomem: ["pozaDomem", "rectangle26", "dzien3"],
  rectangle26: ["rectangle26"],
  dzien3: ["dzien3"],
  przywolajWinde: ["przywolajWinde", "rectangle29", "iconLift"],
  rectangle29: ["rectangle29"],
  iconLift: ["iconLift"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  barMainPanel: "div";
  frame3868: "div";
  group39512: "div";
  menu: "div";
  dom: "div";
  tryby: "div";
  iconModes: "div";
  glowna: "div";
  timeAndDate: "div";
  weatherWidgetNoWifi: "div";
  rectangle19: "div";
  texticon: "div";
  iconWeather: "div";
  heatControlCircleButton: "div";
  aktulanie21: "div";
  humidity: "div";
  slider: typeof Slider;
  notificationsMainPanel3: "div";
  rectangle67: "div";
  buttonsSmallNotifications2: "div";
  frame3869: "div";
  rectangle63: "div";
  notificationsMainPanel2: "div";
  rectangle66: "div";
  buttonsSmallNotifications: "div";
  frame3870: "div";
  rectangle62: "div";
  odtworz: "div";
  notificationsMainPanel4: "div";
  rectangle68: "div";
  buttonRecordMessage: "div";
  tryby2: "div";
  button: typeof Button;
  ulubione: "div";
  rectangle28: "div";
  dzien5: "div";
  dzien: "div";
  rectangle24: "div";
  iconSun: "div";
  noc: "div";
  rectangle25: "div";
  dzien2: "div";
  iconNight: "div";
  pozaDomem: "div";
  rectangle26: "div";
  dzien3: "div";
  przywolajWinde: "div";
  rectangle29: "div";
  iconLift: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage2__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage2__VariantsArgs;
    args?: PlasmicHomepage2__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage2__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage2__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage2__ArgProps,
      internalVariantPropNames: PlasmicHomepage2__VariantProps
    });

    return PlasmicHomepage2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage2";
  } else {
    func.displayName = `PlasmicHomepage2.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage2 = Object.assign(
  // Top-level PlasmicHomepage2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    barMainPanel: makeNodeComponent("barMainPanel"),
    frame3868: makeNodeComponent("frame3868"),
    group39512: makeNodeComponent("group39512"),
    menu: makeNodeComponent("menu"),
    dom: makeNodeComponent("dom"),
    tryby: makeNodeComponent("tryby"),
    iconModes: makeNodeComponent("iconModes"),
    glowna: makeNodeComponent("glowna"),
    timeAndDate: makeNodeComponent("timeAndDate"),
    weatherWidgetNoWifi: makeNodeComponent("weatherWidgetNoWifi"),
    rectangle19: makeNodeComponent("rectangle19"),
    texticon: makeNodeComponent("texticon"),
    iconWeather: makeNodeComponent("iconWeather"),
    heatControlCircleButton: makeNodeComponent("heatControlCircleButton"),
    aktulanie21: makeNodeComponent("aktulanie21"),
    humidity: makeNodeComponent("humidity"),
    slider: makeNodeComponent("slider"),
    notificationsMainPanel3: makeNodeComponent("notificationsMainPanel3"),
    rectangle67: makeNodeComponent("rectangle67"),
    buttonsSmallNotifications2: makeNodeComponent("buttonsSmallNotifications2"),
    frame3869: makeNodeComponent("frame3869"),
    rectangle63: makeNodeComponent("rectangle63"),
    notificationsMainPanel2: makeNodeComponent("notificationsMainPanel2"),
    rectangle66: makeNodeComponent("rectangle66"),
    buttonsSmallNotifications: makeNodeComponent("buttonsSmallNotifications"),
    frame3870: makeNodeComponent("frame3870"),
    rectangle62: makeNodeComponent("rectangle62"),
    odtworz: makeNodeComponent("odtworz"),
    notificationsMainPanel4: makeNodeComponent("notificationsMainPanel4"),
    rectangle68: makeNodeComponent("rectangle68"),
    buttonRecordMessage: makeNodeComponent("buttonRecordMessage"),
    tryby2: makeNodeComponent("tryby2"),
    button: makeNodeComponent("button"),
    ulubione: makeNodeComponent("ulubione"),
    rectangle28: makeNodeComponent("rectangle28"),
    dzien5: makeNodeComponent("dzien5"),
    dzien: makeNodeComponent("dzien"),
    rectangle24: makeNodeComponent("rectangle24"),
    iconSun: makeNodeComponent("iconSun"),
    noc: makeNodeComponent("noc"),
    rectangle25: makeNodeComponent("rectangle25"),
    dzien2: makeNodeComponent("dzien2"),
    iconNight: makeNodeComponent("iconNight"),
    pozaDomem: makeNodeComponent("pozaDomem"),
    rectangle26: makeNodeComponent("rectangle26"),
    dzien3: makeNodeComponent("dzien3"),
    przywolajWinde: makeNodeComponent("przywolajWinde"),
    rectangle29: makeNodeComponent("rectangle29"),
    iconLift: makeNodeComponent("iconLift"),

    // Metadata about props expected for PlasmicHomepage2
    internalVariantProps: PlasmicHomepage2__VariantProps,
    internalArgProps: PlasmicHomepage2__ArgProps
  }
);

export default PlasmicHomepage2;
/* prettier-ignore-end */
